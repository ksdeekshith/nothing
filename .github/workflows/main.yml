name: Test

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
          matrix:
            version: ["1.18", "1.19", "1.20", "1.20-test"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.MY_USERNAME }}
          password: ${{ secrets.MY_PASSWORD }}
      
      - name: Docker image exists
        uses: cloudposse/github-action-docker-image-exists@0.1.1
        with:
          registry: quay.io
          organization: projectquay
          repository: golang
          tag: ${{ matrix.version }}

  build_job:
    runs-on: ubuntu-18.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
    
    strategy:
      matrix:
        version: ["1.18", "1.19", "1.20", "1.20-test"]
        include:
          - arch: aarch64
            distro: ubuntu18.04
          - arch: ppc64le
            distro: alpine_latest
          - arch: s390x
            distro: fedora_latest
          - arch: none
            distro: none
            base_image: riscv64/busybox
    
    steps:
      - uses: actions/checkout@v3
      - name: Docker pull Test [arch]
        uses: uraimo/run-on-arch-action@v2
        id: test
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          
          githubToken: ${{ github.token }}
          
          env: |
            artifact_name: git-${{ matrix.distro }}_${{ matrix.arch }}
          
          install: |
            case "${{ matrix.distro }}" in
              ubuntu*|jessie|stretch|buster|bullseye)
                apt-get update -q -y
                ;;
              fedora*)
                dnf -y update
                ;;
              alpine*)
                apk update
                ;;
            esac
          
          run: |
            docker pull quay.io/projectquay/golang:${{ matrix.version }}
