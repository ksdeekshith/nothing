name: Build bison wheel on IBMZ

on:
  workflow_call:
    inputs:
      release:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2  
      - uses: uraimo/run-on-arch-action@v2.2.0
        name: Install dependencies and build wheels for bison
        id: build
        with:
          arch: s390x
          distro: ubuntu20.04
          
          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"
          
          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
            
      
          run: |   
           apt-get update -y
           apt-get install -y build-essential autoconf libtool pkg-config git software-properties-common curl wget 
           add-apt-repository ppa:deadsnakes/ppa -y
           apt-get install python3.9 python3-pip python3-dev libpython3.9-dev -y
            
           #Downloading bison latest package and Installing dependencies
           #bison --version
           echo "Building grpc ${{ inputs.release }}"
           python3.9 -m pip install --upgrade pip
           python3.9 -m pip install -U wheel setuptools
           wget https://ftp.gnu.org/gnu/bison/bison-${{ inputs.release }}.tar.gz
           tar -xzvf bison-${{ inputs.release }}.tar.gz
           cd bison-${{ inputs.release }}
           PATH=$PATH:/usr/local/m4/bin/
           ./configure --prefix=/usr/local/bison
           make
           make install
            
           #creating setup.py for creating wheel for bison
           echo -e "\nfrom setuptools import setup\nsetup(\n  name='bison',\n  version='${{ inputs.release }}',\n  description='The GNU Parser Generator',\n  author='GNU Project',\n  url='https://www.gnu.org/software/bison/',\n  packages=['/usr/local/bison'],\n  install_requires=[],\n)" >> setup.py
           cat setup.py
            
           #creating wheel for bison latest version
           python3.9 setup.py bdist_wheel
           
           ls /root/
           ls /root/bison-${{ inputs.release }}/
           ls /root/bison-${{ inputs.release }}/dist
  
            
           WHEEL_PATH=$(find /bison-${{ inputs.release }}/dist/ -name "bison-${{ inputs.release }}*.whl")
           WHEEL_NAME=$(basename $(find /bison-${{ inputs.release }}/dist/ -name "bison-${{ inputs.release }}*.whl"))
           echo $WHEEL_PATH
           echo $WHEEL_NAME
           cp $WHEEL_PATH /artifacts/$WHEEL_NAME
           ls /artifacts/
            
            
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.release }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          artifacts: ./artifacts/bison-${{ inputs.release }}*.whl
          name: ${{ inputs.release }}
          replacesArtifacts: true
          draft: false
          prerelease: false
