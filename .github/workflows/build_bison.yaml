name: Build bison wheel on IBMZ

on:
  workflow_call:
    inputs:
      release:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2  
      - uses: uraimo/run-on-arch-action@v2.2.0
        name: Install dependencies and build wheels for bison
        id: build
        with:
          arch: s390x
          distro: ubuntu20.04
          
          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"
          
          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
            
      
          run: |   
            bison --version
            apt-get update -y
            apt-get install -y build-essential autoconf libtool pkg-config git software-properties-common curl wget 
            add-apt-repository ppa:deadsnakes/ppa -y
            apt-get install python3.9 python3-pip python3-dev libpython3.9-dev -y
            
            #Downloading bison latest package and Installing dependencies
            echo "Building grpc ${{ inputs.release }}"
            python3.9 -m pip install --upgrade pip
            python3.9 -m pip install -U wheel setuptools
            wget https://ftp.gnu.org/gnu/bison/bison-${{ inputs.release }}.tar.gz
            tar -xzvf bison-3.8.2.tar.gz
            cd bison-3.8.2
            mkdir build_bison
            cd build_bison
            ../configure --prefix=$(pwd)
            make && make install
            cd ..
            
            #creating setup.py for creating wheel for bison
            echo "\
            from setuptools import setup
            setup(
              name='bison',
              version='3.8.2',
              description='The GNU Parser Generator',
              author='GNU Project',
              author_email='bug-bison@gnu.org',
              url='https://www.gnu.org/software/bison/',
              packages=['build_bison'],
              install_requires=[],
            )" >> setup.py
            
            #creating wheel for bison latest version
            python3.9 setup.py bdist_wheel
  
            
            WHEEL_PATH=$(find / -name "bison-${{ inputs.release }}*.whl")
            WHEEL_NAME=$(basename $(find / -name "bison-${{ inputs.release }}*.whl"))
            echo $WHEEL_PATH
            echo $WHEEL_NAME
            cp $WHEEL_PATH /artifacts/$WHEEL_NAME
            ls /artifacts/
            
            
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.release }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          artifacts: ./artifacts/bison-${{ inputs.release }}*.whl
          name: ${{ inputs.release }}
          replacesArtifacts: true
          draft: false
          prerelease: false
